{"version":3,"sources":["./src/app/comments/comments-edit/comments-edit.component.html","./src/app/comments/comments-list/comments-list.component.html","./src/app/comments/comments.component.html","./src/app/comments/comments-edit/comments-edit.component.css","./src/app/comments/comments-edit/comments-edit.component.ts","./src/app/comments/comments-list/comments-list.component.css","./src/app/comments/comments-list/comments-list.component.ts","./src/app/comments/comments-routing.module.ts","./src/app/comments/comments.component.css","./src/app/comments/comments.component.ts","./src/app/comments/comments.module.ts","./src/app/comments/comments.service.ts"],"names":[],"mappings":"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","file":"comments-comments-module.js","sourcesContent":["export default \"<p>\\r\\n    Add/Edit comment\\r\\n</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n    <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n        <div class=\\\"example-container\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Text\\\" formControlName=\\\"text\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('text').touched && formGroup.get('text').errors && formGroup.get('text').errors.required\\\">\\r\\n                    Text required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Important\\\" formControlName=\\\"important\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('important').touched && formGroup.get('important').errors && formGroup.get('important').errors.required\\\">\\r\\n                    Text required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"MovieId\\\" formControlName=\\\"movieId\\\" type=\\\"number\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('movieId').touched && formGroup.get('movieId').errors && formGroup.get('movieId').errors.required\\\">\\r\\n                    Text required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"example-button-row\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-card>\\r\\n\"","export default \"\\r\\n<h1>Comments</h1>\\r\\n\\r\\n<p>Many comments in the list</p>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n    <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' color=\\\"primary\\\">Add</button>\\r\\n</div>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"comments\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"text\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Text </th>\\r\\n        <td mat-cell *matCellDef=\\\"let comment\\\"> {{comment.text}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"important\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Important </th>\\r\\n        <td mat-cell *matCellDef=\\\"let comment\\\"> {{comment.important}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"movieId\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> MovieId </th>\\r\\n        <td mat-cell *matCellDef=\\\"let comment\\\"> {{comment.movieId}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n    Action Column\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:10%\\\"> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let comment\\\">\\r\\n            <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', comment.id]\\\">edit</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deleteComment(comment)\\\">delete</mat-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!comments\\\"></mat-progress-bar>\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<router-outlet></router-outlet>\\n\"","export default \"\\r\\n.example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 5px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n    .example-container > * {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    body {\\r\\n    background-image: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbWVudHMvY29tbWVudHMtZWRpdC9jb21tZW50cy1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osbUJBQW1CO0FBQ3ZCOztJQUVJO1FBQ0ksV0FBVztJQUNmOztJQUdKO0lBQ0ksc0JBQXNCO0FBQzFCIiwiZmlsZSI6InNyYy9hcHAvY29tbWVudHMvY29tbWVudHMtZWRpdC9jb21tZW50cy1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuICAgIC5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG5cclxuXHJcbmJvZHkge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CommentsService } from '../comments.service';\r\nimport { Comment } from '../comments.models';\r\n\r\n@Component({\r\n  selector: 'app-comments-edit',\r\n  templateUrl: './comments-edit.component.html',\r\n  styleUrls: ['./comments-edit.component.css']\r\n})\r\nexport class CommentsEditComponent implements OnInit {\r\n\r\n    private routerLink: string = '../list';\r\n\r\n    private commentID: number;\r\n\r\n    private isEdit: boolean = false;\r\n\r\n    public formGroup: FormGroup;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private commentsService: CommentsService,\r\n        private formBuilder: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.commentID = parseInt(this.route.snapshot.params['id']);\r\n\r\n        if (this.commentID) {\r\n            this.routerLink = '../../list';\r\n\r\n            this.commentsService.getComment(this.commentID).subscribe(res => {\r\n                this.initForm(res);\r\n                this.isEdit = true;\r\n            });\r\n        }\r\n        else {\r\n            this.initForm(<Comment>{});\r\n        }\r\n    }\r\n\r\n    save() {\r\n        Object.keys(this.formGroup.controls).forEach(control => {\r\n            this.formGroup.get(control).markAsTouched();\r\n        });\r\n\r\n        if (this.formGroup.valid) {\r\n            let comment = this.formGroup.value as Comment;\r\n            comment.text = \"bububu\";\r\n\r\n            if (this.isEdit) {\r\n                comment.id = this.commentID;\r\n\r\n                this.commentsService.modifyComment(comment).subscribe(res => {\r\n                    this.router.navigate(['/comments']);\r\n                });\r\n            } else {\r\n\r\n                this.commentsService.saveComment(comment).subscribe(res => {\r\n                    this.router.navigate(['/comments']);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    initForm(comment: Comment) {\r\n        this.formGroup = this.formBuilder.group({\r\n            text: [comment.text, Validators.required],\r\n            important: [comment.important, Validators.required],\r\n            movieId: [comment.movieId, Validators.required]\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnRzL2NvbW1lbnRzLWxpc3QvY29tbWVudHMtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Comment } from '../comments.models';\r\nimport { CommentsService } from '../comments.service';\r\n\r\n@Component({\r\n  selector: 'app-comments-list',\r\n  templateUrl: './comments-list.component.html',\r\n  styleUrls: ['./comments-list.component.css']\r\n})\r\nexport class CommentsListComponent implements OnInit {\r\n\r\n\r\n    public displayedColumns: string[] = ['text', 'important','movieId', 'action'];\r\n    public comments: Comment[];\r\n\r\n    constructor(private commentsService: CommentsService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadComments();\r\n    }\r\n\r\n    loadComments() {\r\n        this.commentsService.listComments().subscribe(res => {\r\n            this.comments = res;\r\n        });\r\n    }\r\n\r\n    deleteComment(comment: Comment) {\r\n        this.commentsService.deleteComment(comment.id).subscribe(x => {\r\n            this.loadComments();\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CommentsComponent } from './comments.component';\r\nimport { CommentsListComponent } from './comments-list/comments-list.component';\r\nimport { CommentsEditComponent } from './comments-edit/comments-edit.component';\r\n\r\n\r\nconst routes2: Routes = [\r\n    {\r\n        path: '', component: CommentsComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n            { path: 'list', component: CommentsListComponent },\r\n            { path: 'edit/:id', component: CommentsEditComponent },\r\n            { path: 'edit', component: CommentsEditComponent },\r\n        ]\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n\r\n    imports: [RouterModule.forChild(routes2)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CommentsRoutingModule {\r\n\r\n    static routedComponents = [CommentsComponent, CommentsListComponent, CommentsEditComponent];\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnRzL2NvbW1lbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\nimport { CoreModule } from '../core/core.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\n\r\nimport { CommentsRoutingModule } from './comments-routing.module';\r\nimport { CommentsService } from './comments.service';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [CommentsRoutingModule.routedComponents],\r\n    imports: [\r\n        CommonModule,\r\n        CommentsRoutingModule,\r\n        AngularMaterialModule,\r\n        CoreModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [CommentsService],\r\n})\r\nexport class CommentsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApplicationService } from '../core/services/application.service';\r\nimport { Comment } from './comments.models';\r\n\r\n@Injectable()\r\nexport class CommentsService {\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private applicationService: ApplicationService) { }\r\n\r\n    getComment(id: number) {\r\n        return this.http.get<Comment>(`${this.applicationService.baseUrl}api/Comments/${id}`);\r\n    }\r\n\r\n    listComments() {\r\n        return this.http.get<Comment[]>(`${this.applicationService.baseUrl}api/Comments`);\r\n    }\r\n\r\n    saveComment(comment: Comment) {\r\n        return this.http.post(`${this.applicationService.baseUrl}api/Comments`, comment);\r\n    }\r\n\r\n    modifyComment(comment: Comment) {\r\n        return this.http.put(`${this.applicationService.baseUrl}api/Comments/${comment.id}`, comment);\r\n    }\r\n\r\n    deleteComment(id: number) {\r\n        return this.http.delete<any>(`${this.applicationService.baseUrl}api/Comments/${id}`);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}