{"version":3,"sources":["./src/app/movies/movies-edit/movies-edit.component.html","./src/app/movies/movies-list/movies-list.component.html","./src/app/movies/movies.component.html","./src/app/movies/movies-edit/movies-edit.component.css","./src/app/movies/movies-edit/movies-edit.component.ts","./src/app/movies/movies-list/movies-list.component.css","./src/app/movies/movies-list/movies-list.component.ts","./src/app/movies/movies-routing.module.ts","./src/app/movies/movies.component.css","./src/app/movies/movies.component.ts","./src/app/movies/movies.module.ts","./src/app/movies/movies.service.ts"],"names":[],"mappings":"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","file":"movies-movies-module.js","sourcesContent":["export default \"<p>\\r\\n    Add/Edit movie\\r\\n</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n    <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n        <div class=\\\"example-container\\\">\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('title').touched && formGroup.get('title').errors && formGroup.get('title').errors.required\\\">\\r\\n                    Title required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('description').touched && formGroup.get('description').errors && formGroup.get('description').errors.required\\\">\\r\\n                    Description required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Genre\\\" formControlName=\\\"genre\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('genre').touched && formGroup.get('genre').errors && formGroup.get('genre').errors.required\\\">\\r\\n                    Genre required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"DurationInMin\\\" formControlName=\\\"durationInMin\\\" type=\\\"number\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('durationInMin').touched && formGroup.get('durationInMin').errors && formGroup.get('durationInMin').errors.required\\\">\\r\\n                    DurationInMin required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"YearOfRelease\\\" formControlName=\\\"yearOfRelease\\\" type=\\\"number\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('yearOfRelease').touched && formGroup.get('yearOfRelease').errors && formGroup.get('yearOfRelease').errors.required\\\">\\r\\n                    YearOfRealease required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Director\\\" formControlName=\\\"director\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('director').touched && formGroup.get('director').errors && formGroup.get('director').errors.required\\\">\\r\\n                    Director required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"DateAdded\\\" formControlName=\\\"dateAdded\\\" type=\\\"datetime\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('dateAdded').touched && formGroup.get('dateAdded').errors && formGroup.get('dateAdded').errors.required\\\">\\r\\n                    Date required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!--<mat-form-field>\\r\\n                <input matInput placeholder=\\\"Rating\\\" formControlName=\\\"rating\\\" type=\\\"number\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('rating').touched && formGroup.get('rating').errors && formGroup.get('rating').errors.required\\\">\\r\\n                    Rating required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Watched\\\" formControlName=\\\"wasWatched\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('wasWatched').touched && formGroup.get('wasWatched').errors && formGroup.get('wasWatched').errors.required\\\">\\r\\n                    Watched required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>-->\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"example-button-row\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-card>\\r\\n\"","export default \"<h1>Movies</h1>\\r\\n\\r\\n<p>Many movies in the list</p>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n    <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' color=\\\"primary\\\">Add</button>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<!--<mat-table matTableFilter [exampleEntity]=\\\"filterEntity\\\"\\r\\n           [filterType]=\\\"filterType\\\" [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">-->\\r\\n\\r\\n<!--<mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>-->\\r\\n\\r\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\" >\\r\\n\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Title </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Description </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"genre\\\" style=\\\"width:21%\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Genre </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.genre}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"durationInMin\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> DurationInMin </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.durationInMin}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"yearOfRelease\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> YearOfRelease </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.yearOfRelease}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"director\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Director </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.director}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"dateAdded\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> DateAdded </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dateAdded}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"numberOfComments\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> NrOfComments </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.numberOfComments}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!--<ng-container matColumnDef=\\\"rating\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Rating </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.rating}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"wasWatched\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Watched </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.wasWatched}} </td>\\r\\n    </ng-container>-->\\r\\n    Action Column\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:10%\\\"> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\">\\r\\n            <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', movie.id]\\\">edit</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deleteMovie(movie)\\\">delete</mat-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n    <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!movies\\\"></mat-progress-bar>\\r\\n\\r\\n\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","export default \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 5px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n    .example-container > * {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    body {\\r\\n    background-image: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aWVzL21vdmllcy1lZGl0L21vdmllcy1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixtQkFBbUI7QUFDdkI7O0lBRUk7UUFDSSxXQUFXO0lBQ2Y7O0lBR0o7SUFDSSxzQkFBc0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9tb3ZpZXMvbW92aWVzLWVkaXQvbW92aWVzLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbiAgICAuZXhhbXBsZS1jb250YWluZXIgPiAqIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuXHJcblxyXG5ib2R5IHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MoviesService } from '../movies.service';\r\nimport { Movie, Genre } from '../movies.models';\r\n\r\n@Component({\r\n  selector: 'app-movies-edit',\r\n  templateUrl: './movies-edit.component.html',\r\n  styleUrls: ['./movies-edit.component.css']\r\n})\r\nexport class MoviesEditComponent implements OnInit {\r\n\r\n    private routerLink: string = '../list';\r\n\r\n    private movieID: number;\r\n\r\n    private isEdit: boolean = false;\r\n\r\n    public formGroup: FormGroup;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private moviesService: MoviesService,\r\n        private formBuilder: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.movieID = parseInt(this.route.snapshot.params['id']);\r\n\r\n        if (this.movieID) {\r\n            this.routerLink = '../../list';\r\n\r\n            this.moviesService.getMovie(this.movieID).subscribe(res => {\r\n                this.initForm(res);\r\n                this.isEdit = true;\r\n            });\r\n        }\r\n        else {\r\n            this.initForm(<Movie>{});\r\n        }\r\n    }\r\n\r\n    save() {\r\n        Object.keys(this.formGroup.controls).forEach(control => {\r\n            this.formGroup.get(control).markAsTouched();\r\n        });\r\n\r\n        if (this.formGroup.valid) {\r\n            let movie = this.formGroup.value as Movie;\r\n            movie.title = \"bububu\";\r\n\r\n            if (this.isEdit) {\r\n                movie.id = this.movieID;\r\n\r\n                this.moviesService.modifyMovie(movie).subscribe(res => {\r\n                    this.router.navigate(['/movies']);\r\n                });\r\n            } else {\r\n\r\n                this.moviesService.saveMovie(movie).subscribe(res => {\r\n                    this.router.navigate(['/movies']);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    initForm(movie: Movie) {\r\n        this.formGroup = this.formBuilder.group({\r\n            title: [movie.title, Validators.required],\r\n            description: [movie.description, Validators.required],\r\n            genre: [movie.genre, Validators.required],\r\n            durationInMin: [movie.durationInMin, Validators.required],\r\n            yearOfRelease: [movie.yearOfRelease, Validators.required],\r\n            director: [movie.director, Validators.required],\r\n            dateAdded: [movie.dateAdded, Validators.required]\r\n        });\r\n    }\r\n}\r\n","export default \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aWVzL21vdmllcy1saXN0L21vdmllcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvbW92aWVzL21vdmllcy1saXN0L21vdmllcy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Movie } from '../movies.models';\r\nimport { MoviesService } from '../movies.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n\r\n@Component({\r\n  selector: 'app-movies-list',\r\n  templateUrl: './movies-list.component.html',\r\n  styleUrls: ['./movies-list.component.css']\r\n})\r\nexport class MoviesListComponent implements OnInit {\r\n\r\n    /*,*/\r\n    public displayedColumns: string[] = ['title', 'description', 'genre', 'durationInMin', 'yearOfRelease', 'director', 'dateAdded', 'numberOfComments', 'action'];\r\n    public movies: Movie[];\r\n\r\n    public dataSource;\r\n    public isloading = false;\r\n\r\n    constructor(private moviesService: MoviesService) {}\r\n\r\n    ngOnInit() {\r\n        this.loadMovies();\r\n    }\r\n\r\n    \r\n\r\n    async loadMovies() {\r\n        try {\r\n            this.moviesService.listMovies().subscribe(res => {\r\n                this.movies = res;\r\n                this.dataSource = new MatTableDataSource(this.movies);\r\n                this.isloading = true;\r\n            });\r\n        } catch (err) {\r\n            console.error(`this is not good: ${err.Message}`);\r\n            this.isloading = false;\r\n        }\r\n    }\r\n\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n\r\n    deleteMovie(movie: Movie) {\r\n        this.moviesService.deleteMovie(movie.id).subscribe(x => {\r\n            this.loadMovies();\r\n        });\r\n    }\r\n\r\n}\r\n\r\n    \r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MoviesComponent } from './movies.component';\r\nimport { MoviesEditComponent } from './movies-edit/movies-edit.component';\r\nimport { MoviesListComponent } from './movies-list/movies-list.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: MoviesComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n            { path: 'list', component: MoviesListComponent },\r\n            { path: 'edit/:id', component: MoviesEditComponent },\r\n            { path: 'edit', component: MoviesEditComponent },\r\n        ]\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n  //declarations: [MoviesEditComponent, MoviesListComponent],\r\n  //imports: [\r\n  //  CommonModule\r\n  //]\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class MoviesRoutingModule {\r\n\r\n    static routedComponents = [MoviesComponent, MoviesListComponent, MoviesEditComponent];\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllcy9tb3ZpZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css']\n})\nexport class MoviesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\n\r\nimport { MoviesRoutingModule } from './movies-routing.module';\r\n\r\nimport { MoviesService } from './movies.service';\r\n\r\n\r\n@NgModule({\r\n    declarations: [MoviesRoutingModule.routedComponents],\r\n    imports: [\r\n        CommonModule,\r\n        MoviesRoutingModule,\r\n        AngularMaterialModule,\r\n        CoreModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [MoviesService],\r\n})\r\n\r\nexport class MoviesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Movie } from './movies.models';\r\nimport { ApplicationService } from '../core/services/application.service';\r\n\r\n\r\n@Injectable()\r\nexport class MoviesService {\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private applicationService: ApplicationService) { }\r\n\r\n    getMovie(id: number) {\r\n        return this.http.get<Movie>(`${this.applicationService.baseUrl}api/Movies/${id}`);\r\n    }\r\n\r\n    listMovies() {\r\n        return this.http.get<Movie[]>(`${this.applicationService.baseUrl}api/Movies`);\r\n    }\r\n\r\n    saveMovie(movie: Movie) {\r\n        return this.http.post(`${this.applicationService.baseUrl}api/Movies`, movie);\r\n    }\r\n\r\n    modifyMovie(movie: Movie) {\r\n        return this.http.put(`${this.applicationService.baseUrl}api/Movies/${movie.id}`, movie);\r\n    }\r\n\r\n    deleteMovie(id: number) {\r\n        return this.http.delete<any>(`${this.applicationService.baseUrl}api/Movies/${id}`);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}