{"version":3,"sources":["./src/app/movies/movies-edit/movies-edit.component.html","./src/app/movies/movies-list/movies-list.component.html","./src/app/movies/movies.component.html","./src/app/core/core.module.ts","./src/app/core/guards/authentication.guard.ts","./src/app/core/services/application.service.ts","./src/app/core/services/http-request-interceptor.ts","./src/app/core/services/security.service.ts","./src/app/core/services/token.service.ts","./src/app/movies/movies-edit/movies-edit.component.css","./src/app/movies/movies-edit/movies-edit.component.ts","./src/app/movies/movies-list/movies-list.component.css","./src/app/movies/movies-list/movies-list.component.ts","./src/app/movies/movies-routing.module.ts","./src/app/movies/movies.component.css","./src/app/movies/movies.component.ts","./src/app/movies/movies.module.ts","./src/app/movies/movies.service.ts"],"names":[],"mappings":"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","file":"movies-movies-module.js","sourcesContent":["export default \"<p>\\r\\n    Add/Edit movie\\r\\n</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n    <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n        <div class=\\\"example-container\\\">\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('title').touched && formGroup.get('title').errors && formGroup.get('title').errors.required\\\">\\r\\n                    Title required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('description').touched && formGroup.get('description').errors && formGroup.get('description').errors.required\\\">\\r\\n                    Description required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Genre\\\" formControlName=\\\"genre\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('genre').touched && formGroup.get('genre').errors && formGroup.get('genre').errors.required\\\">\\r\\n                    Genre required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"DurationInMin\\\" formControlName=\\\"durationInMin\\\" type=\\\"number\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('durationInMin').touched && formGroup.get('durationInMin').errors && formGroup.get('durationInMin').errors.required\\\">\\r\\n                    DurationInMin required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"YearOfRelease\\\" formControlName=\\\"yearOfRelease\\\" type=\\\"number\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('yearOfRelease').touched && formGroup.get('yearOfRelease').errors && formGroup.get('yearOfRelease').errors.required\\\">\\r\\n                    YearOfRealease required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Director\\\" formControlName=\\\"director\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('director').touched && formGroup.get('director').errors && formGroup.get('director').errors.required\\\">\\r\\n                    Director required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"DateAdded\\\" formControlName=\\\"dateAdded\\\" type=\\\"datetime\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('dateAdded').touched && formGroup.get('dateAdded').errors && formGroup.get('dateAdded').errors.required\\\">\\r\\n                    Date required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!--<mat-form-field>\\r\\n                <input matInput placeholder=\\\"Rating\\\" formControlName=\\\"rating\\\" type=\\\"number\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('rating').touched && formGroup.get('rating').errors && formGroup.get('rating').errors.required\\\">\\r\\n                    Rating required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Watched\\\" formControlName=\\\"wasWatched\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('wasWatched').touched && formGroup.get('wasWatched').errors && formGroup.get('wasWatched').errors.required\\\">\\r\\n                    Watched required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>-->\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"example-button-row\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-card>\\r\\n\"","export default \"<h1>Movies</h1>\\r\\n\\r\\n<p>Many movies in the list</p>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n    <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' color=\\\"primary\\\">Add</button>\\r\\n</div>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"movies\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Title </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.title}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Description </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.description}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"genre\\\" style=\\\"width:21%\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Genre </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.genre}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"durationInMin\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> DurationInMin </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.durationInMin}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"yearOfRelease\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> YearOfRelease </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.yearOfRelease}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"director\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Director </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.director}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"dateAdded\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> DateAdded </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.dateAdded}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!--<ng-container matColumnDef=\\\"rating\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Rating </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.rating}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"wasWatched\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Watched </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.wasWatched}} </td>\\r\\n    </ng-container>-->\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"numberOfComments\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> NrOfComments </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.numberOfComments}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    Action Column\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:10%\\\"> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let movie\\\">\\r\\n            <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', movie.id]\\\">edit</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deleteMovie(movie)\\\">delete</mat-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!movies\\\"></mat-progress-bar>\\r\\n\\r\\n\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthenticationGuard } from './guards/authentication.guard';\n\nimport { HttpRequestInterceptor } from './services/http-request-interceptor';\n\nimport { SecurityService } from './services/security.service';\nimport { TokenService } from './services/token.service';\nimport { ApplicationService } from './services/application.service';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [],\n    providers: [\n        AuthenticationGuard,\n        SecurityService,\n        TokenService,\n        ApplicationService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: HttpRequestInterceptor,\n            multi: true\n        }\n    ],\n    exports: []\n})\n\nexport class CoreModule {\n\n}","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n    constructor() { }\n\n    canActivate() {\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { TokenService } from './token.service';\n\n@Injectable()\nexport class ApplicationService {\n\n    public baseUrl: string;\n\n    constructor(private tokenService: TokenService) {\n        this.baseUrl = document.getElementsByTagName('base')[0].href;\n    }\n\n    isLoggedIn() {\n        return this.tokenService.getToken() != null;\n    }\n\n    userEmail() {\n        var token = this.tokenService.getToken();\n\n        if (token != null)\n            return token.email;\n\n        return \"\";\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { empty, Observable, throwError, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TokenService } from './token.service';\nimport { Token } from './security.models';\n\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n\n    constructor(\n        private router: Router,\n        private tokenService: TokenService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        var token: Token = this.tokenService.getToken();\n\n        request = token ? request.clone(\n            {\n                headers: request.headers.set(\"Authorization\", \"Bearer \" + token.value)\n            }\n        ) : request;\n\n        return next.handle(request).pipe(\n            catchError(\n                (error: HttpErrorResponse, caught: Observable<HttpEvent<HttpErrorResponse>>) => {\n\n                    if (error.status === 401) {\n                        this.router.navigate(['/login']);\n                        return of<HttpEvent<HttpErrorResponse>>();\n                    }\n\n                    if (error.status === 403) {\n                        this.router.navigate(['/forbidden']);\n                        return of<HttpEvent<HttpErrorResponse>>();\n                    }\n                    return throwError(error);\n                }\n            )\n        );\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observer, Observable } from 'rxjs';\n\nimport { Token, RegisterModel, LoginModel } from './security.models';\nimport { TokenService } from './token.service';\nimport { ApplicationService } from './application.service';\n\n@Injectable()\nexport class SecurityService {\n\n    constructor(\n        private httpClient: HttpClient,\n        private tokenService: TokenService,\n        private applicationService: ApplicationService) {\n    }\n\n    register(registerModel: RegisterModel) {\n        return new Observable<Token>((obs: Observer<Token>) => {\n            this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Register`, registerModel).subscribe(token => {\n\n                this.tokenService.saveToken(token);\n\n                obs.next(token);\n                obs.complete();\n            });\n        });\n    }\n\n    login(loginModel: LoginModel) {\n        return new Observable<Token>((obs: Observer<Token>) => {\n            this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Login`, loginModel).subscribe(token => {\n\n                this.tokenService.saveToken(token);\n\n                obs.next(token);\n                obs.complete();\n            });\n        });\n    }\n\n    logout() {\n        this.tokenService.deleteToken();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Token } from './security.models';\n\n@Injectable()\nexport class TokenService {\n\n    constructor() { }\n\n    saveToken(token: Token) {\n        localStorage.setItem(\"token\", JSON.stringify(token));\n    }\n\n    getToken(): Token | null {\n        return this.validate(JSON.parse(localStorage.getItem(\"token\") as string));\n    }\n\n    validate(token: Token | null): Token | null {\n        if (token) {\n            if (new Date(token.expiry) > new Date())\n                return token;\n        }\n\n        return null;\n    }\n\n    deleteToken() {\n        localStorage.removeItem(\"token\");\n    }\n}\n","export default \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 5px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n    .example-container > * {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    body {\\r\\n    background-image: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aWVzL21vdmllcy1lZGl0L21vdmllcy1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixtQkFBbUI7QUFDdkI7O0lBRUk7UUFDSSxXQUFXO0lBQ2Y7O0lBR0o7SUFDSSxzQkFBc0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9tb3ZpZXMvbW92aWVzLWVkaXQvbW92aWVzLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbiAgICAuZXhhbXBsZS1jb250YWluZXIgPiAqIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuXHJcblxyXG5ib2R5IHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MoviesService } from '../movies.service';\r\nimport { Movie, Genre } from '../movies.models';\r\n\n@Component({\n  selector: 'app-movies-edit',\n  templateUrl: './movies-edit.component.html',\n  styleUrls: ['./movies-edit.component.css']\n})\nexport class MoviesEditComponent implements OnInit {\n\n    private routerLink: string = '../list';\n\n    private movieID: number;\n\n    private isEdit: boolean = false;\n\n    public formGroup: FormGroup;\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private moviesService: MoviesService,\n        private formBuilder: FormBuilder) { }\n\n    ngOnInit() {\n\n        this.movieID = parseInt(this.route.snapshot.params['id']);\n\n        if (this.movieID) {\n            this.routerLink = '../../list';\n\n            this.moviesService.getMovie(this.movieID).subscribe(res => {\n                this.initForm(res);\n                this.isEdit = true;\n            });\n        }\n        else {\n            this.initForm(<Movie>{});\n        }\n    }\n\n    save() {\n        Object.keys(this.formGroup.controls).forEach(control => {\n            this.formGroup.get(control).markAsTouched();\n        });\n\n        if (this.formGroup.valid) {\n            let movie = this.formGroup.value as Movie;\n            movie.title = \"bububu\";\n\n            if (this.isEdit) {\n                movie.id = this.movieID;\n\n                this.moviesService.modifyMovie(movie).subscribe(res => {\n                    this.router.navigate(['/movies']);\n                });\n            } else {\n\n                this.moviesService.saveMovie(movie).subscribe(res => {\n                    this.router.navigate(['/movies']);\n                });\n            }\n        }\n    }\n\n    initForm(movie: Movie) {\n        this.formGroup = this.formBuilder.group({\n            title: [movie.title, Validators.required],\n            description: [movie.description, Validators.required],\n            genre: [movie.genre, Validators.required],\n            durationInMin: [movie.durationInMin, Validators.required],\n            yearOfRelease: [movie.yearOfRelease, Validators.required],\n            director: [movie.director, Validators.required],\n            dateAdded: [movie.dateAdded, Validators.required]\n        });\n    }\n}\n","export default \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aWVzL21vdmllcy1saXN0L21vdmllcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9tb3ZpZXMvbW92aWVzLWxpc3QvbW92aWVzLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Movie } from '../movies.models';\r\nimport { MoviesService } from '../movies.service';\r\n\n@Component({\n  selector: 'app-movies-list',\n  templateUrl: './movies-list.component.html',\n  styleUrls: ['./movies-list.component.css']\n})\nexport class MoviesListComponent implements OnInit {\n\n\n    public displayedColumns: string[] = ['title', 'description', 'genre', 'durationInMin', 'yearOfRelease', 'director', 'dateAdded', 'numberOfComments', 'action'];\n    public movies: Movie[];\n\n    constructor(private moviesService: MoviesService) { }\n\n    ngOnInit() {\n        this.loadMovies();\n    }\n\n    loadMovies() {\n        this.moviesService.listMovies().subscribe(res => {\n            this.movies = res;\n        });\n    }\n\n    deleteMovie(movie: Movie) {\n        this.moviesService.deleteMovie(movie.id).subscribe(x => {\n            this.loadMovies();\n        });\n    }\n\n}\n\n    \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MoviesComponent } from './movies.component';\nimport { MoviesEditComponent } from './movies-edit/movies-edit.component';\nimport { MoviesListComponent } from './movies-list/movies-list.component';\n\r\n\r\n\n\nconst routes: Routes = [\n    {\n        path: '', component: MoviesComponent,\n        children: [\n            { path: '', redirectTo: 'list', pathMatch: 'full' },\n            { path: 'list', component: MoviesListComponent },\n            { path: 'edit/:id', component: MoviesEditComponent },\n            { path: 'edit', component: MoviesEditComponent },\n        ]\n    }\n];\n\n\n@NgModule({\n  //declarations: [MoviesEditComponent, MoviesListComponent],\n  //imports: [\n  //  CommonModule\n  //]\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\n})\nexport class MoviesRoutingModule {\n\n    static routedComponents = [MoviesComponent, MoviesListComponent, MoviesEditComponent];\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllcy9tb3ZpZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css']\n})\nexport class MoviesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule } from '../core/core.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\n\r\nimport { MoviesRoutingModule } from './movies-routing.module';\n\nimport { MoviesService } from './movies.service';\n\r\n\n@NgModule({\n    declarations: [MoviesRoutingModule.routedComponents],\n    imports: [\n        CommonModule,\n        MoviesRoutingModule,\n        AngularMaterialModule,\n        CoreModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [MoviesService],\n})\n\nexport class MoviesModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\nimport { Movie } from './movies.models';\r\nimport { ApplicationService } from '../core/services/application.service';\r\n\r\n\n@Injectable()\nexport class MoviesService {\n\n    constructor(\n        private http: HttpClient,\n        private applicationService: ApplicationService) { }\n\n    getMovie(id: number) {\n        return this.http.get<Movie>(`${this.applicationService.baseUrl}api/Movies/${id}`);\n    }\n\n    listMovies() {\n        return this.http.get<Movie[]>(`${this.applicationService.baseUrl}api/Movies`);\n    }\n\n    saveMovie(movie: Movie) {\n        return this.http.post(`${this.applicationService.baseUrl}api/Movies`, movie);\n    }\n\n    modifyMovie(movie: Movie) {\n        return this.http.put(`${this.applicationService.baseUrl}api/Movies/${movie.id}`, movie);\n    }\n\n    deleteMovie(id: number) {\n        return this.http.delete<any>(`${this.applicationService.baseUrl}api/Movies/${id}`);\n    }\n}\n"],"sourceRoot":"webpack:///"}